# sudo: required

# blocklist

# safelist
branches:
 only:
 - master

# except:
# - gh-pages

#  only:
#  - gh-pages
#  - /.*/

language: cpp

compiler: gcc

cache:
  - apt
  - ccache

matrix:
  include:
  - os: osx
  - os: linux

# addons:
#   apt:
#     packages:
#      - build-essential
#      - libtool
#      - automake
#      - gfortran
#      - libglu1-mesa-dev
#      - libfreetype6-dev
#      - uuid-dev
#      - libxmu-dev
#      - libxmu-headers
#      - libxi-dev
#      - libx11-dev
#      - libxt-dev
#      - libxaw7-dev
#      - liblapack-dev
#      - tcsh
#      - curl
#      - git
#      - libxml2-utils

before_install:
  # only make release and prune builds on Mac with hub command
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then exit 0 ; fi
  # on osx use brew to install autotools and compiler
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
       brew update ;
       brew install github-release;
       brew install hub;
    fi

# install:
#  # install pre-built packages needed to compile freesurfer
#  - ./travis/packages.sh

# do not use default time zone
before_script:
  - export TZ=America/New_York

script:
  # configure and compile freesurfer (removedfor this example)
  # test doing fake build then install step via script
  travis_wait 30 ./src/build.sh

# add a timestamp tage before deploy
before_deploy:
  - git config --local user.name "buildqa"
  - git config --local user.email "buildqa@contbay.com"
  - ./deploy.sh
  # upload assets
  - files=(./install/darwin_2018*.tgz) && ./manage_assets.py buildqa tester1 "$(date '+%Y-%m-%d')" add $files
  # prune old releases (assets then its tag) according to build limit in releases.py script
  - ./releases.py


deploy:
  provider: releases
  api_key: $GITHUB_TOKEN
  overwrite: true
  script: files=(./install/darwin_2018*.tgz) && ./manage_assets.py buildqa tester1 "$(date '+%Y-%m-%d')" add $files
  skip_cleanup: true


